parameters:
- name: defaultBranchName
  type: string
  default: 'master'
- name: useTerraform
  type: boolean
  default: true
- name: terraformVersion
  type: string
  default: ''
- name: buildContainerImage
  type: string
  default: ''
- name: deployType
  type: string
  default: 'null'
  values:
  - 'null'
  - 'ReactApp'
  - 'LambdaService'
- name: buildLambdas
  type: object
  default:
  - ''

variables:
- template: helpers/select-environment.yml
  parameters:
    defaultBranchName: ${{ parameters.defaultBranchName }}

- ${{ if eq(parameters.useTerraform, true) }}:
  - template: Terraform/environment.yml
    parameters:
      AWS_ACCOUNT: $(AWS_ACCOUNT)  
      AWS_REGION: $(AWS_REGION)
      ENVIRONMENT_NAME: $(ENVIRONMENT_NAME)
      repoName: $(Build.Repository.Name)
      sourcesDirectory: $(Build.SourcesDirectory)
      terraformVersion: ${{ parameters.terraformVersion }}

stages:
- stage: Validate
  jobs:
  - ${{ if in(parameters.deployType, 'ReactApp', 'LambdaService') }}:
    - template: ${{ parameters.deployType }}/validate.yml
      parameters:
        buildContainerImage: ${{ parameters.buildContainerImage }}
        ${{ if eq(parameters.deployType, 'LambdaService') }}:
          buildLambdas: ${{ parameters.buildLambdas }}

  - ${{ if eq(parameters.useTerraform, true) }}:
    - template: Terraform/validate.yml

- stage: BuildDeploy
  displayName: Build and Deploy
  jobs:
  - ${{ if eq(parameters.useTerraform, true) }}:
    - template: Terraform/deploy.yml

  - ${{ if in(parameters.deployType, 'ReactApp') }}:
    - template: ${{ parameters.deployType }}/build.yml
      parameters:
        buildContainerImage: ${{ parameters.buildContainerImage }}

  - ${{ if in(parameters.deployType, 'ReactApp') }}:
    - template: ${{ parameters.deployType }}/deploy.yml                  