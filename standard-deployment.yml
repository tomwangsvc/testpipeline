parameters:
- name: defaultBranchName
  type: string
  default: 'master'
- name: useTerraform
  type: boolean
  default: true
- name: terraformVersion
  type: string
  default: ''
- name: useContainerImage
  type: string
  default: true
- name: deployType
  type: string
  default: 'null'
  values:
  - 'null'
  - 'ReactApp'
  - 'LambdaService'
- name: lambdas
  type: object
  default: false
- name: lambdasPath
  type: string
  default: ./lambdas
- name: sources
  type: object
  default: ''

variables:
- template: helpers/select-environment.yml
  parameters:
    defaultBranchName: ${{ parameters.defaultBranchName }}

- ${{ if eq(parameters.useTerraform, true) }}:
  - template: Terraform/environment.yml
    parameters:
      AWS_ACCOUNT: $(AWS_ACCOUNT)  
      AWS_REGION: $(AWS_REGION)
      ENVIRONMENT_NAME: $(ENVIRONMENT_NAME)
      repoName: $(Build.Repository.Name)
      sourcesDirectory: $(Build.SourcesDirectory)
      terraformVersion: ${{ parameters.terraformVersion }}

stages:
- ${{ if ne(parameters.useContainerImage, false) }}:
  - stage: Initialise
    jobs: 
    - job: GetContainerImage
      displayName: Get Container Image
      steps:
      - template: helpers/container-get-image.yml
        parameters:
          useContainerImage: ${{ parameters.useContainerImage }}

- stage: Validate
  condition: or(eq(variables.ENVIRONMENT_NAME, 'DEV'), eq(variables.ENVIRONMENT_NAME, 'QA'))
  jobs:
  - ${{ if eq(parameters.useTerraform, true) }}:
    - template: Terraform/validate.yml

  - ${{ if ne(parameters.sources, '') }}:  
    - template: helpers/container-job.yml
      parameters: 
        job: ValidateSources
        displayName: Validate Sources
        steps:
        - template: ${{ parameters.deployType }}/validate.yml
          parameters:
            sources: ${{ parameters.sources }}

# Build Once, Deploy Anywhere
- ${{ if in(parameters.deployType, 'LambdaService') }}:
  - stage: Build
    jobs:
    - job: Build
      displayName: Build ${{ parameters.deployType }}
      condition: or(eq(variables.ENVIRONMENT_NAME, 'DEV'), eq(variables.ENVIRONMENT_NAME, 'QA'))
      variables:
        CONTAINER_IMAGE: $[ stageDependencies.Validate.GetContainerImage.outputs['GetImage.url'] ]
      container: 
        image: $(CONTAINER_IMAGE)
        env:
          CI: true
      steps:
      - template: ${{ parameters.deployType }}/build.yml
        parameters:
          ${{ if eq(parameters.deployType, 'LambdaService') }}:
            lambdas: ${{ parameters.lambdas }}
            lambdasPath: ${{ parameters.lambdasPath }}

- ${{ if eq(parameters.useTerraform, true) }}:
  - stage: Deploy
    jobs:
    - template: Terraform/deploy.yml
      ${{ if eq(parameters.deployType, 'LambdaService') }}:
        parameters:
          preDeploy: 
          - template: LambdaService/deploy.yml
            parameters: 
              lambdas: ${{ parameters.lambdas }}
              lambdasPath: ${{ parameters.lambdasPath }}

# Build for Each Environment
- ${{ if in(parameters.deployType, 'ReactApp') }}:
  - stage: Provision
    jobs:
    - ${{ if in(parameters.deployType, 'ReactApp') }}:
      - template: ${{ parameters.deployType }}/build.yml
        parameters:
          buildContainerImage: ${{ parameters.buildContainerImage }}

    - ${{ if in(parameters.deployType, 'ReactApp') }}:
      - template: ${{ parameters.deployType }}/deploy.yml                  