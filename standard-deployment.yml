parameters:
- name: useTerraform
  type: boolean
  default: true
- name: usersteps
  type: stepList
  default: []
- name: terraformVersion
  type: string
  default: ''

variables:
- template: helpers/select-environment.yml

- ${{ if eq(parameters.useTerraform, true) }}:
  - template: helpers/terraform-environment.yml
    parameters:
      AWS_ACCOUNT: $(AWS_ACCOUNT)  
      AWS_REGION: $(AWS_REGION)
      ENVIRONMENT_NAME: $(ENVIRONMENT_NAME)
      localPath: $(Build.Repository.LocalPath)
      projectName: $(System.TeamProject)
      repoName: $(Build.Repository.Name)
      terraformVersion: ${{ parameters.terraformVersion }}

stages:
- stage: Validate
  jobs:
  - ${{ if eq(parameters.useTerraform, true) }}:
    - job: TerraformPlan
      displayName: Terraform Plan
      steps:
      - template: helpers/terraform-steps.yml
        parameters:
          steps: 
          - template: helpers/publish-artifacts.yml
            parameters:
              artifactName: tfplan-$(ENVIRONMENT_NAME)
              steps: 
              - task: TerraformTaskV1@0
                displayName: Plan Terraform
                name: TerraformPlan
                inputs:
                  provider: $(TF_PROVIDER)
                  command: plan
                  workingDirectory: $(TF_PATH)
                  commandOptions: -out=$(artifactDirectory.path)/tfplan -var-file=$(TF_VAR_FILE)
                  environmentServiceNameAWS: $(TF_SERVICE_CONNECTOR)

              - script: mv $(TerraformPlan.jsonPlanFilePath) $(artifactDirectory.path)/tfplan.json
                name: GetTFPlanJson
                displayName: Get tfplan.json

- stage: Deploy
  jobs:
  - deployment: Deploy
    environment: $(ENVIRONMENT_NAME)
    strategy:
      runOnce:
        ${{ if eq(parameters.useTerraform, true) }}:
          preDeploy:  
            steps:
            - checkout: self

            - download: current
              artifact: tfplan-$(ENVIRONMENT_NAME)
              displayName: Get tfplan

            - template: helpers/terraform-steps.yml
              parameters:
                steps: 
                - task: TerraformTaskV1@0
                  displayName: Apply Terraform
                  name: TerraformApply
                  inputs:
                    provider: $(TF_PROVIDER)
                    command: apply
                    workingDirectory: $(TF_PATH)
                    commandOptions: $(Pipeline.Workspace)/tfplan-$(ENVIRONMENT_NAME)/tfplan
                    environmentServiceNameAWS: $(TF_SERVICE_CONNECTOR)

                - template: helpers/publish-artifacts.yml
                  parameters:
                    artifactName: tfoutput-$(ENVIRONMENT_NAME)
                    steps: 
                    - script: mv $(TerraformApply.jsonOutputVariablesPath) $(artifactDirectory.path)/tfoutput.json
                      name: GetTFOutputFileName
                      displayName: Get Terraform Output

        deploy:  
          steps:
          - checkout: self

          - download: current
            artifact: tfoutput-$(ENVIRONMENT_NAME)
            displayName: Get Terraform Outputs

          - ${{ each step in parameters.usersteps }}:
            - ${{ step }}