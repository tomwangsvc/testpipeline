parameters:
- name: condition
  type: string
  default: succeeded()
- name: dependsOn
  type: string
  default: ''
- name: env 
  type: object
  default: ''
- name: preDeploySteps
  type: stepList
  default: []
- name: useTerraform
  type: string
  default: true

jobs:
- deployment: Terraform
  condition: ${{ parameters.condition }}
  dependsOn: ${{ parameters.dependsOn }}
  environment: $(ENVIRONMENT_NAME)
  strategy:
    runOnce:
      deploy:  
        steps:
        - checkout: self

        - ${{ parameters.preDeploySteps }}
              
        - download: current
          artifact: tfplan-$(ENVIRONMENT_NAME)
          displayName: Get tfplan

        - template: init.yml
          parameters:
            useTerraform: ${{ parameters.useTerraform }}

        - task: TerraformTaskV1@0
          displayName: Apply
          name: TerraformApply
          ${{ if ne(parameters.env, '') }}:
            env: ${{ parameters.env }}
          inputs:
            provider: $(TF_PROVIDER)
            command: apply
            workingDirectory: $(TF_PATH)
            commandOptions: $(Pipeline.Workspace)/tfplan-$(ENVIRONMENT_NAME)/tfplan
            environmentServiceNameAWS: $(TF_SERVICE_CONNECTOR)

        - script: mv $(TerraformApply.jsonOutputVariablesPath) $(Build.StagingDirectory)/tfoutput.json
          name: GetTFOutputFileName
          displayName: Get Outputs

        - publish: $(Build.StagingDirectory)
          artifact: tfoutput-$(ENVIRONMENT_NAME)
          displayName: Publish Outputs