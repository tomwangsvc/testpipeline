parameters:
- name: env
  type: object
  default: ''

steps:
- ${{ if eq(parameters.useTFOutputs, true) }}:
  - download: current
    artifact: tfoutput-$(ENVIRONMENT_NAME)
    displayName: Get Terraform Outputs
  ## TODO: make TF Outputs consumable by npm build

- task: Cache@2
  displayName: Check Dependency Cache
  inputs:
    key: yarn | "$(Agent.OS)" | yarn.lock
    path: node_modules
    cacheHitVar: CACHE_RESTORED
    restoreKeys: |
      yarn | $(Agent.OS)
      yarn

- script: yarn --frozen-lockfile
  displayName: Install Dependencies
  condition: ne(variables.CACHE_RESTORED, 'true')

- script: printenv
# ./node_modules/.bin/env-cmd -f .env.${ENVIRONMENT_NAME} npm run build
  displayName: Build App
  ${{ if ne(parameters.env, '') }}:
    env: ${{ parameters.env }} 

- publish: $(System.DefaultWorkingDirectory)/build/
  artifact: react-app-$(ENVIRONMENT_NAME)
  displayName: Publish App Artifact