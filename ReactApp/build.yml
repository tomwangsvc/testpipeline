parameters:
- name: terraformOutputEnv
  type: object
  default: ''

steps:
- ${{ if ne(parameters.terraformOutputEnv, '') }}:
  - template: ../Terraform/output-map.yml
    parameters: 
      REACT_APP_WEBSITE_ENDPOINT: website_endpoint

- script: printenv
- task: Cache@2
  displayName: Check Dependency Cache
  inputs:
    key: yarn | "$(Agent.OS)" | yarn.lock
    path: node_modules
    cacheHitVar: CACHE_RESTORED
    restoreKeys: |
      yarn | $(Agent.OS)
      yarn

- script: yarn --frozen-lockfile
  displayName: Install Dependencies
  condition: ne(variables.CACHE_RESTORED, 'true')

- script: ./node_modules/.bin/env-cmd -f .env.${ENVIRONMENT_NAME} npm run build
  displayName: Build App

- publish: $(System.DefaultWorkingDirectory)/build/
  artifact: react-app-$(ENVIRONMENT_NAME)
  displayName: Publish App Artifact



  # ${{ each output in parameters.terraformOutputEnv }}:
  #           ${{ output.Key }}: $[ dependencies.PublishTFOutputs.outputs['${{ output.Key }}.value'] ]