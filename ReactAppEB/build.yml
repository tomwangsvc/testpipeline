parameters:
- name: terraformOutputEnv
  type: object
  default: ''

steps:
- ${{ if ne(parameters.terraformOutputEnv, '') }}:
  - template: ../Terraform/output-map.yml
    parameters: 
      terraformOutputEnv:
        # map Terraform outputs to respective REACT_APP env variables 
        ${{ each output in parameters.terraformOutputEnv }}:
          ${{ if startsWith(output.Key, 'REACT_APP_') }}:
            ${{ output.Key }}: ${{ output.Value }}

- task: Cache@2
  displayName: Check Dependency Cache
  inputs:
    key: yarn | "$(Agent.OS)" | yarn.lock
    path: node_modules
    cacheHitVar: CACHE_RESTORED
    restoreKeys: |
      yarn | $(Agent.OS)
      yarn

- task: npmAuthenticate@0
  displayName: Authenticate NPM
  condition: ne(variables.CACHE_RESTORED, 'true')
  inputs:
    workingFile: .npmrc

- script: yarn --frozen-lockfile
  displayName: Install Dependencies
  condition: ne(variables.CACHE_RESTORED, 'true')

- script: ./node_modules/.bin/env-cmd -f .env.${ENVIRONMENT_NAME} npm run build
  displayName: Build App
  ${{ if ne(parameters.terraformOutputEnv, '') }}:
    env:
      ${{ each output in parameters.terraformOutputEnv }}:
        ${{ if startsWith(output.Key, 'REACT_APP_') }}:
          ${{ output.Key }}: $(${{ output.Key }}.value)

- publish: $(System.DefaultWorkingDirectory)/build/
  artifact: react-app-$(ENVIRONMENT_NAME)
  displayName: Publish App Artifact
